/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/sync/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fayl0n%2FDeepflow%2FProjects%2FBangbo0%2Fmarcel-maze%2Fmarcel-maze%2Fapp%2Fsync%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!*********************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fayl0n%2FDeepflow%2FProjects%2FBangbo0%2Fmarcel-maze%2Fmarcel-maze%2Fapp%2Fsync%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \*********************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/sync/page.tsx */ \"(app-pages-browser)/./app/sync/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZheWwwbiUyRkRlZXBmbG93JTJGUHJvamVjdHMlMkZCYW5nYm8wJTJGbWFyY2VsLW1hemUlMkZtYXJjZWwtbWF6ZSUyRmFwcCUyRnN5bmMlMkZwYWdlLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9ZmFsc2UhIiwibWFwcGluZ3MiOiJBQUFBLGdLQUFxSCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzFhZTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvYXlsMG4vRGVlcGZsb3cvUHJvamVjdHMvQmFuZ2JvMC9tYXJjZWwtbWF6ZS9tYXJjZWwtbWF6ZS9hcHAvc3luYy9wYWdlLnRzeFwiKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fayl0n%2FDeepflow%2FProjects%2FBangbo0%2Fmarcel-maze%2Fmarcel-maze%2Fapp%2Fsync%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/api/navigation.js":
/*!**************************************************!*\
  !*** ./node_modules/next/dist/api/navigation.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/components/navigation */ \"(app-pages-browser)/./node_modules/next/dist/client/components/navigation.js\");\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_client_components_navigation__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n//# sourceMappingURL=navigation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYXBpL25hdmlnYXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdEOztBQUVoRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2FwaS9uYXZpZ2F0aW9uLmpzP2U0YjQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4uL2NsaWVudC9jb21wb25lbnRzL25hdmlnYXRpb25cIjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bmF2aWdhdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/api/navigation.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/components/AsciiChaos.tsx":
/*!***************************************!*\
  !*** ./app/components/AsciiChaos.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ AsciiChaos; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n// ASCII 背景（深暗红色字体），基于“chaos”模式\nconst patterns = {\n    chaos: (x, y, t)=>{\n        const noise1 = Math.sin(x * 0.5 + t) * Math.cos(y * 0.3 - t);\n        const noise2 = Math.sin(y * 0.4 + t * 0.5) * Math.cos(x * 0.2 + t * 0.7);\n        const noise3 = Math.sin((x + y) * 0.2 + t * 0.8);\n        return noise1 * 0.3 + noise2 * 0.3 + noise3 * 0.4;\n    }\n};\nfunction AsciiChaos() {\n    _s();\n    const [frame, setFrame] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [mousePos, setMousePos] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        x: 0,\n        y: 0\n    });\n    const [mouseDown, setMouseDown] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // 动态根据视口大小填满整屏\n    const FONT_SIZE = 18; // px\n    const CHAR_W = FONT_SIZE * 0.62 + 0.5; // 估算字符宽度（含 letter-spacing）\n    const CHAR_H = FONT_SIZE * 0.8; // 与 line-height 对齐\n    const [grid, setGrid] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        cols: 80,\n        rows: 45\n    });\n    const slowdownFactor = 6;\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        let animationId;\n        const animate = ()=>{\n            setFrame((f)=>(f + 1) % (240 * slowdownFactor));\n            animationId = requestAnimationFrame(animate);\n        };\n        animationId = requestAnimationFrame(animate);\n        return ()=>{\n            if (animationId) cancelAnimationFrame(animationId);\n        };\n    }, []);\n    // 根据容器/窗口尺寸动态计算网格，使 ASCII 覆盖整个可视区域\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const recompute = ()=>{\n            var _containerRef_current;\n            const rect = (_containerRef_current = containerRef.current) === null || _containerRef_current === void 0 ? void 0 : _containerRef_current.getBoundingClientRect();\n            var _rect_width;\n            const w = (_rect_width = rect === null || rect === void 0 ? void 0 : rect.width) !== null && _rect_width !== void 0 ? _rect_width : window.innerWidth;\n            var _rect_height;\n            const h = (_rect_height = rect === null || rect === void 0 ? void 0 : rect.height) !== null && _rect_height !== void 0 ? _rect_height : window.innerHeight;\n            const cols = Math.ceil(w / CHAR_W);\n            const rows = Math.ceil(h / CHAR_H);\n            setGrid((g)=>g.cols === cols && g.rows === rows ? g : {\n                    cols,\n                    rows\n                });\n        };\n        recompute();\n        const ro = new ResizeObserver(()=>recompute());\n        if (containerRef.current) ro.observe(containerRef.current);\n        window.addEventListener(\"resize\", recompute);\n        return ()=>{\n            window.removeEventListener(\"resize\", recompute);\n            if (containerRef.current) ro.disconnect();\n        };\n    }, []);\n    const generateAsciiArt = ()=>{\n        const t = frame * Math.PI / (60 * slowdownFactor);\n        const currentPattern = patterns.chaos;\n        let result = \"\";\n        for(let y = 0; y < grid.rows; y++){\n            for(let x = 0; x < grid.cols; x++){\n                let value = currentPattern(x, y, t);\n                if (mouseDown && containerRef.current) {\n                    const rect = containerRef.current.getBoundingClientRect();\n                    const dx = x - (mousePos.x - rect.left) / rect.width * grid.cols;\n                    const dy = y - (mousePos.y - rect.top) / rect.height * grid.rows;\n                    const dist = Math.sqrt(dx * dx + dy * dy);\n                    const mouseInfluence = Math.exp(-dist * 0.1) * Math.sin(t * 2);\n                    value += mouseInfluence * 0.8;\n                }\n                if (value > 0.6) result += \"@\";\n                else if (value > 0.4) result += \"0\";\n                else if (value > 0.2) result += \"/\";\n                else if (value > 0.0) result += \"=\";\n                else if (value > -0.2) result += \"-\";\n                else if (value > -0.4) result += \".\";\n                else result += \" \";\n            }\n            result += \"\\n\";\n        }\n        return result;\n    };\n    const handleMouseMove = (e)=>{\n        setMousePos({\n            x: e.clientX,\n            y: e.clientY\n        });\n    };\n    const handleMouseDown = ()=>setMouseDown(true);\n    const handleMouseUp = ()=>setMouseDown(false);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: containerRef,\n        onMouseMove: handleMouseMove,\n        onMouseDown: handleMouseDown,\n        onMouseUp: handleMouseUp,\n        style: {\n            position: \"fixed\",\n            inset: 0,\n            background: \"transparent\",\n            overflow: \"hidden\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            pointerEvents: \"none\",\n            zIndex: 0\n        },\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"pre\", {\n            style: {\n                fontFamily: \"monospace\",\n                fontSize: \"\".concat(FONT_SIZE, \"px\"),\n                lineHeight: \"0.8\",\n                letterSpacing: \"0.05em\",\n                color: \"rgba(122, 27, 27, 0.35)\",\n                userSelect: \"none\",\n                margin: 0,\n                padding: 0\n            },\n            children: generateAsciiArt()\n        }, void 0, false, {\n            fileName: \"/Users/ayl0n/Deepflow/Projects/Bangbo0/marcel-maze/marcel-maze/app/components/AsciiChaos.tsx\",\n            lineNumber: 111,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/ayl0n/Deepflow/Projects/Bangbo0/marcel-maze/marcel-maze/app/components/AsciiChaos.tsx\",\n        lineNumber: 94,\n        columnNumber: 5\n    }, this);\n}\n_s(AsciiChaos, \"qt+0l3VUtqZ3/aiNoR4SE7Y/soU=\");\n_c = AsciiChaos;\n// 根据窗口大小重算网格\n// 使用 effect 监听 resize\n// 放在组件定义底部以保持清晰\nAsciiChaos.prototype = {};\nvar _c;\n$RefreshReg$(_c, \"AsciiChaos\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/AsciiChaos.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/sync/page.tsx":
/*!***************************!*\
  !*** ./app/sync/page.tsx ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ SyncPage; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var _tauri_apps_api_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tauri-apps/api/core */ \"(app-pages-browser)/./node_modules/@tauri-apps/api/core.js\");\n/* harmony import */ var _tauri_apps_api_event__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tauri-apps/api/event */ \"(app-pages-browser)/./node_modules/@tauri-apps/api/event.js\");\n/* harmony import */ var _components_AsciiChaos__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/AsciiChaos */ \"(app-pages-browser)/./app/components/AsciiChaos.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\nfunction SyncPage() {\n    _s();\n    const params = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useSearchParams)();\n    const env = params.get(\"env\") || \"\";\n    const version = params.get(\"version\") || \"\";\n    const port = params.get(\"port\") || \"\";\n    const firmwarePath = params.get(\"firmwarePath\") || \"\";\n    const includeLittleFS = params.get(\"includeLittleFS\") === \"1\";\n    const [progress, setProgress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [logline, setLogline] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [isFlashing, setIsFlashing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [result, setResult] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const unlistenProgressP = (0,_tauri_apps_api_event__WEBPACK_IMPORTED_MODULE_4__.listen)(\"flash-progress\", (e)=>{\n            const p = e.payload;\n            setProgress(p);\n            setLogline(p.message || \"\");\n        });\n        const unlistenCompleteP = (0,_tauri_apps_api_event__WEBPACK_IMPORTED_MODULE_4__.listen)(\"flash-complete\", (e)=>{\n            const r = e.payload;\n            setResult(r);\n            setIsFlashing(false);\n        });\n        return ()=>{\n            unlistenProgressP.then((fn)=>fn());\n            unlistenCompleteP.then((fn)=>fn());\n        };\n    }, []);\n    const start = async ()=>{\n        setIsFlashing(true);\n        setProgress(null);\n        setResult(null);\n        setLogline(\"\");\n        try {\n            await (0,_tauri_apps_api_core__WEBPACK_IMPORTED_MODULE_3__.invoke)(\"flash_esp32\", {\n                request: {\n                    port,\n                    firmware_path: firmwarePath,\n                    include_littlefs: includeLittleFS,\n                    custom_baud: null\n                }\n            });\n        } catch (e) {\n            setResult({\n                success: false,\n                message: String(e)\n            });\n            setIsFlashing(false);\n        }\n    };\n    var _progress_percentage;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"container-center\",\n        style: {\n            position: \"relative\",\n            zIndex: 1\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_AsciiChaos__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {}, void 0, false, {\n                fileName: \"/Users/ayl0n/Deepflow/Projects/Bangbo0/marcel-maze/marcel-maze/app/sync/page.tsx\",\n                lineNumber: 68,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"card\",\n                style: {\n                    width: 760,\n                    maxWidth: \"92vw\",\n                    position: \"relative\",\n                    zIndex: 2\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            gap: 12,\n                            marginBottom: 8\n                        },\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                className: \"button\",\n                                onClick: ()=>window.history.back(),\n                                children: \"返回\"\n                            }, void 0, false, {\n                                fileName: \"/Users/ayl0n/Deepflow/Projects/Bangbo0/marcel-maze/marcel-maze/app/sync/page.tsx\",\n                                lineNumber: 71,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                                className: \"title\",\n                                style: {\n                                    margin: 0\n                                },\n                                children: \"参数同步\"\n                            }, void 0, false, {\n                                fileName: \"/Users/ayl0n/Deepflow/Projects/Bangbo0/marcel-maze/marcel-maze/app/sync/page.tsx\",\n                                lineNumber: 74,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/ayl0n/Deepflow/Projects/Bangbo0/marcel-maze/marcel-maze/app/sync/page.tsx\",\n                        lineNumber: 70,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            opacity: 0.85,\n                            marginBottom: 10,\n                            fontSize: 14\n                        },\n                        children: [\n                            \"角色：\",\n                            env || \"-\",\n                            \"，版本：\",\n                            version || \"-\",\n                            \"，串口：\",\n                            port || \"-\",\n                            \"，LittleFS：\",\n                            includeLittleFS ? \"是\" : \"否\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/ayl0n/Deepflow/Projects/Bangbo0/marcel-maze/marcel-maze/app/sync/page.tsx\",\n                        lineNumber: 76,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"progress\",\n                        style: {\n                            marginTop: 6\n                        },\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"bar\",\n                            style: {\n                                width: \"\".concat((_progress_percentage = progress === null || progress === void 0 ? void 0 : progress.percentage) !== null && _progress_percentage !== void 0 ? _progress_percentage : 0, \"%\")\n                            }\n                        }, void 0, false, {\n                            fileName: \"/Users/ayl0n/Deepflow/Projects/Bangbo0/marcel-maze/marcel-maze/app/sync/page.tsx\",\n                            lineNumber: 80,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/ayl0n/Deepflow/Projects/Bangbo0/marcel-maze/marcel-maze/app/sync/page.tsx\",\n                        lineNumber: 79,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            marginTop: 6,\n                            fontSize: 12,\n                            opacity: 0.8\n                        },\n                        children: logline\n                    }, void 0, false, {\n                        fileName: \"/Users/ayl0n/Deepflow/Projects/Bangbo0/marcel-maze/marcel-maze/app/sync/page.tsx\",\n                        lineNumber: 82,\n                        columnNumber: 9\n                    }, this),\n                    result && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            marginTop: 10,\n                            fontSize: 14,\n                            color: result.success ? \"#22c55e\" : \"#ef4444\"\n                        },\n                        children: result.message\n                    }, void 0, false, {\n                        fileName: \"/Users/ayl0n/Deepflow/Projects/Bangbo0/marcel-maze/marcel-maze/app/sync/page.tsx\",\n                        lineNumber: 84,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"actions\",\n                        style: {\n                            marginTop: 16\n                        },\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            className: \"button primary\",\n                            onClick: start,\n                            disabled: isFlashing || !port || !firmwarePath,\n                            children: \"开始神经网络参数同步\"\n                        }, void 0, false, {\n                            fileName: \"/Users/ayl0n/Deepflow/Projects/Bangbo0/marcel-maze/marcel-maze/app/sync/page.tsx\",\n                            lineNumber: 89,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/ayl0n/Deepflow/Projects/Bangbo0/marcel-maze/marcel-maze/app/sync/page.tsx\",\n                        lineNumber: 88,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/ayl0n/Deepflow/Projects/Bangbo0/marcel-maze/marcel-maze/app/sync/page.tsx\",\n                lineNumber: 69,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/ayl0n/Deepflow/Projects/Bangbo0/marcel-maze/marcel-maze/app/sync/page.tsx\",\n        lineNumber: 67,\n        columnNumber: 5\n    }, this);\n}\n_s(SyncPage, \"XE1laCjc8Qjfkd/Vm8nmdiREfSE=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.useSearchParams\n    ];\n});\n_c = SyncPage;\nvar _c;\n$RefreshReg$(_c, \"SyncPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9zeW5jL3BhZ2UudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFDNEM7QUFDTTtBQUNKO0FBQ0M7QUFDRztBQVVuQyxTQUFTTTs7SUFDdEIsTUFBTUMsU0FBU0wsZ0VBQWVBO0lBQzlCLE1BQU1NLE1BQU1ELE9BQU9FLEdBQUcsQ0FBQyxVQUFVO0lBQ2pDLE1BQU1DLFVBQVVILE9BQU9FLEdBQUcsQ0FBQyxjQUFjO0lBQ3pDLE1BQU1FLE9BQU9KLE9BQU9FLEdBQUcsQ0FBQyxXQUFXO0lBQ25DLE1BQU1HLGVBQWVMLE9BQU9FLEdBQUcsQ0FBQyxtQkFBbUI7SUFDbkQsTUFBTUksa0JBQWtCTixPQUFPRSxHQUFHLENBQUMsdUJBQXVCO0lBRTFELE1BQU0sQ0FBQ0ssVUFBVUMsWUFBWSxHQUFHZCwrQ0FBUUEsQ0FBdUI7SUFDL0QsTUFBTSxDQUFDZSxTQUFTQyxXQUFXLEdBQUdoQiwrQ0FBUUEsQ0FBQztJQUN2QyxNQUFNLENBQUNpQixZQUFZQyxjQUFjLEdBQUdsQiwrQ0FBUUEsQ0FBQztJQUM3QyxNQUFNLENBQUNtQixRQUFRQyxVQUFVLEdBQUdwQiwrQ0FBUUEsQ0FBK0M7SUFFbkZELGdEQUFTQSxDQUFDO1FBQ1IsTUFBTXNCLG9CQUFvQmxCLDZEQUFNQSxDQUFDLGtCQUFrQixDQUFDbUI7WUFDbEQsTUFBTUMsSUFBSUQsRUFBRUUsT0FBTztZQUNuQlYsWUFBWVM7WUFDWlAsV0FBV08sRUFBRUUsT0FBTyxJQUFJO1FBQzFCO1FBQ0EsTUFBTUMsb0JBQW9CdkIsNkRBQU1BLENBQUMsa0JBQWtCLENBQUNtQjtZQUNsRCxNQUFNSyxJQUFJTCxFQUFFRSxPQUFPO1lBQ25CSixVQUFVTztZQUNWVCxjQUFjO1FBQ2hCO1FBQ0EsT0FBTztZQUNMRyxrQkFBa0JPLElBQUksQ0FBQyxDQUFDQyxLQUFPQTtZQUMvQkgsa0JBQWtCRSxJQUFJLENBQUMsQ0FBQ0MsS0FBT0E7UUFDakM7SUFDRixHQUFHLEVBQUU7SUFFTCxNQUFNQyxRQUFRO1FBQ1paLGNBQWM7UUFDZEosWUFBWTtRQUNaTSxVQUFVO1FBQ1ZKLFdBQVc7UUFDWCxJQUFJO1lBQ0YsTUFBTWQsNERBQU1BLENBQUMsZUFBZTtnQkFDMUI2QixTQUFTO29CQUNQckI7b0JBQ0FzQixlQUFlckI7b0JBQ2ZzQixrQkFBa0JyQjtvQkFDbEJzQixhQUFhO2dCQUNmO1lBQ0Y7UUFDRixFQUFFLE9BQU9aLEdBQUc7WUFDVkYsVUFBVTtnQkFBRWUsU0FBUztnQkFBT1YsU0FBU1csT0FBT2Q7WUFBRztZQUMvQ0osY0FBYztRQUNoQjtJQUNGO1FBZ0JnREw7SUFkaEQscUJBQ0UsOERBQUN3QjtRQUFJQyxXQUFVO1FBQW1CQyxPQUFPO1lBQUVDLFVBQVU7WUFBWUMsUUFBUTtRQUFFOzswQkFDekUsOERBQUNyQyw4REFBVUE7Ozs7OzBCQUNYLDhEQUFDaUM7Z0JBQUlDLFdBQVU7Z0JBQU9DLE9BQU87b0JBQUVHLE9BQU87b0JBQUtDLFVBQVU7b0JBQVFILFVBQVU7b0JBQVlDLFFBQVE7Z0JBQUU7O2tDQUMzRiw4REFBQ0o7d0JBQUlFLE9BQU87NEJBQUVLLFNBQVM7NEJBQVFDLFlBQVk7NEJBQVVDLEtBQUs7NEJBQUlDLGNBQWM7d0JBQUU7OzBDQUM1RSw4REFBQ0M7Z0NBQU9WLFdBQVU7Z0NBQVNXLFNBQVMsSUFBTUMsT0FBT0MsT0FBTyxDQUFDQyxJQUFJOzBDQUFJOzs7Ozs7MENBR2pFLDhEQUFDQztnQ0FBR2YsV0FBVTtnQ0FBUUMsT0FBTztvQ0FBRWUsUUFBUTtnQ0FBRTswQ0FBRzs7Ozs7Ozs7Ozs7O2tDQUU5Qyw4REFBQ2pCO3dCQUFJRSxPQUFPOzRCQUFFZ0IsU0FBUzs0QkFBTVIsY0FBYzs0QkFBSVMsVUFBVTt3QkFBRzs7NEJBQUc7NEJBQ3pEakQsT0FBTzs0QkFBSTs0QkFBS0UsV0FBVzs0QkFBSTs0QkFBS0MsUUFBUTs0QkFBSTs0QkFBV0Usa0JBQWtCLE1BQU07Ozs7Ozs7a0NBRXpGLDhEQUFDeUI7d0JBQUlDLFdBQVU7d0JBQVdDLE9BQU87NEJBQUVrQixXQUFXO3dCQUFFO2tDQUM5Qyw0RUFBQ3BCOzRCQUFJQyxXQUFVOzRCQUFNQyxPQUFPO2dDQUFFRyxPQUFPLEdBQTZCLE9BQTFCN0IsQ0FBQUEsdUJBQUFBLHFCQUFBQSwrQkFBQUEsU0FBVTZDLFVBQVUsY0FBcEI3QyxrQ0FBQUEsdUJBQXdCLEdBQUU7NEJBQUc7Ozs7Ozs7Ozs7O2tDQUV2RSw4REFBQ3dCO3dCQUFJRSxPQUFPOzRCQUFFa0IsV0FBVzs0QkFBR0QsVUFBVTs0QkFBSUQsU0FBUzt3QkFBSTtrQ0FBSXhDOzs7Ozs7b0JBQzFESSx3QkFDQyw4REFBQ2tCO3dCQUFJRSxPQUFPOzRCQUFFa0IsV0FBVzs0QkFBSUQsVUFBVTs0QkFBSUcsT0FBT3hDLE9BQU9nQixPQUFPLEdBQUcsWUFBWTt3QkFBVTtrQ0FDdEZoQixPQUFPTSxPQUFPOzs7Ozs7a0NBR25CLDhEQUFDWTt3QkFBSUMsV0FBVTt3QkFBVUMsT0FBTzs0QkFBRWtCLFdBQVc7d0JBQUc7a0NBQzlDLDRFQUFDVDs0QkFBT1YsV0FBVTs0QkFBaUJXLFNBQVNuQjs0QkFBTzhCLFVBQVUzQyxjQUFjLENBQUNQLFFBQVEsQ0FBQ0M7c0NBQWM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTzdHO0dBaEZ3Qk47O1FBQ1BKLDREQUFlQTs7O0tBRFJJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2FwcC9zeW5jL3BhZ2UudHN4P2RhYWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VTZWFyY2hQYXJhbXMgfSBmcm9tIFwibmV4dC9uYXZpZ2F0aW9uXCI7XG5pbXBvcnQgeyBpbnZva2UgfSBmcm9tIFwiQHRhdXJpLWFwcHMvYXBpL2NvcmVcIjtcbmltcG9ydCB7IGxpc3RlbiB9IGZyb20gXCJAdGF1cmktYXBwcy9hcGkvZXZlbnRcIjtcbmltcG9ydCBBc2NpaUNoYW9zIGZyb20gXCIuLi9jb21wb25lbnRzL0FzY2lpQ2hhb3NcIjtcblxuaW50ZXJmYWNlIEZsYXNoUHJvZ3Jlc3Mge1xuICBzdGFnZTogc3RyaW5nO1xuICBjdXJyZW50OiBudW1iZXI7XG4gIHRvdGFsOiBudW1iZXI7XG4gIHBlcmNlbnRhZ2U6IG51bWJlcjtcbiAgbWVzc2FnZTogc3RyaW5nO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBTeW5jUGFnZSgpIHtcbiAgY29uc3QgcGFyYW1zID0gdXNlU2VhcmNoUGFyYW1zKCk7XG4gIGNvbnN0IGVudiA9IHBhcmFtcy5nZXQoXCJlbnZcIikgfHwgXCJcIjtcbiAgY29uc3QgdmVyc2lvbiA9IHBhcmFtcy5nZXQoXCJ2ZXJzaW9uXCIpIHx8IFwiXCI7XG4gIGNvbnN0IHBvcnQgPSBwYXJhbXMuZ2V0KFwicG9ydFwiKSB8fCBcIlwiO1xuICBjb25zdCBmaXJtd2FyZVBhdGggPSBwYXJhbXMuZ2V0KFwiZmlybXdhcmVQYXRoXCIpIHx8IFwiXCI7XG4gIGNvbnN0IGluY2x1ZGVMaXR0bGVGUyA9IHBhcmFtcy5nZXQoXCJpbmNsdWRlTGl0dGxlRlNcIikgPT09IFwiMVwiO1xuXG4gIGNvbnN0IFtwcm9ncmVzcywgc2V0UHJvZ3Jlc3NdID0gdXNlU3RhdGU8Rmxhc2hQcm9ncmVzcyB8IG51bGw+KG51bGwpO1xuICBjb25zdCBbbG9nbGluZSwgc2V0TG9nbGluZV0gPSB1c2VTdGF0ZShcIlwiKTtcbiAgY29uc3QgW2lzRmxhc2hpbmcsIHNldElzRmxhc2hpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbcmVzdWx0LCBzZXRSZXN1bHRdID0gdXNlU3RhdGU8eyBzdWNjZXNzOiBib29sZWFuOyBtZXNzYWdlOiBzdHJpbmcgfSB8IG51bGw+KG51bGwpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgdW5saXN0ZW5Qcm9ncmVzc1AgPSBsaXN0ZW4oXCJmbGFzaC1wcm9ncmVzc1wiLCAoZSkgPT4ge1xuICAgICAgY29uc3QgcCA9IGUucGF5bG9hZCBhcyBGbGFzaFByb2dyZXNzO1xuICAgICAgc2V0UHJvZ3Jlc3MocCk7XG4gICAgICBzZXRMb2dsaW5lKHAubWVzc2FnZSB8fCBcIlwiKTtcbiAgICB9KTtcbiAgICBjb25zdCB1bmxpc3RlbkNvbXBsZXRlUCA9IGxpc3RlbihcImZsYXNoLWNvbXBsZXRlXCIsIChlKSA9PiB7XG4gICAgICBjb25zdCByID0gZS5wYXlsb2FkIGFzIHsgc3VjY2VzczogYm9vbGVhbjsgbWVzc2FnZTogc3RyaW5nIH07XG4gICAgICBzZXRSZXN1bHQocik7XG4gICAgICBzZXRJc0ZsYXNoaW5nKGZhbHNlKTtcbiAgICB9KTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgdW5saXN0ZW5Qcm9ncmVzc1AudGhlbigoZm4pID0+IGZuKCkpO1xuICAgICAgdW5saXN0ZW5Db21wbGV0ZVAudGhlbigoZm4pID0+IGZuKCkpO1xuICAgIH07XG4gIH0sIFtdKTtcblxuICBjb25zdCBzdGFydCA9IGFzeW5jICgpID0+IHtcbiAgICBzZXRJc0ZsYXNoaW5nKHRydWUpO1xuICAgIHNldFByb2dyZXNzKG51bGwpO1xuICAgIHNldFJlc3VsdChudWxsKTtcbiAgICBzZXRMb2dsaW5lKFwiXCIpO1xuICAgIHRyeSB7XG4gICAgICBhd2FpdCBpbnZva2UoXCJmbGFzaF9lc3AzMlwiLCB7XG4gICAgICAgIHJlcXVlc3Q6IHtcbiAgICAgICAgICBwb3J0LFxuICAgICAgICAgIGZpcm13YXJlX3BhdGg6IGZpcm13YXJlUGF0aCxcbiAgICAgICAgICBpbmNsdWRlX2xpdHRsZWZzOiBpbmNsdWRlTGl0dGxlRlMsXG4gICAgICAgICAgY3VzdG9tX2JhdWQ6IG51bGwsXG4gICAgICAgIH0sXG4gICAgICB9KTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBzZXRSZXN1bHQoeyBzdWNjZXNzOiBmYWxzZSwgbWVzc2FnZTogU3RyaW5nKGUpIH0pO1xuICAgICAgc2V0SXNGbGFzaGluZyhmYWxzZSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXItY2VudGVyXCIgc3R5bGU9e3sgcG9zaXRpb246IFwicmVsYXRpdmVcIiwgekluZGV4OiAxIH19PlxuICAgICAgPEFzY2lpQ2hhb3MgLz5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZFwiIHN0eWxlPXt7IHdpZHRoOiA3NjAsIG1heFdpZHRoOiBcIjkydndcIiwgcG9zaXRpb246IFwicmVsYXRpdmVcIiwgekluZGV4OiAyIH19PlxuICAgICAgICA8ZGl2IHN0eWxlPXt7IGRpc3BsYXk6IFwiZmxleFwiLCBhbGlnbkl0ZW1zOiBcImNlbnRlclwiLCBnYXA6IDEyLCBtYXJnaW5Cb3R0b206IDggfX0+XG4gICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJidXR0b25cIiBvbkNsaWNrPXsoKSA9PiB3aW5kb3cuaGlzdG9yeS5iYWNrKCl9PlxuICAgICAgICAgICAg6L+U5ZueXG4gICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgPGgxIGNsYXNzTmFtZT1cInRpdGxlXCIgc3R5bGU9e3sgbWFyZ2luOiAwIH19PuWPguaVsOWQjOatpTwvaDE+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IHN0eWxlPXt7IG9wYWNpdHk6IDAuODUsIG1hcmdpbkJvdHRvbTogMTAsIGZvbnRTaXplOiAxNCB9fT5cbiAgICAgICAgICDop5LoibLvvJp7ZW52IHx8IFwiLVwife+8jOeJiOacrO+8mnt2ZXJzaW9uIHx8IFwiLVwife+8jOS4suWPo++8mntwb3J0IHx8IFwiLVwife+8jExpdHRsZUZT77yae2luY2x1ZGVMaXR0bGVGUyA/IFwi5pivXCIgOiBcIuWQplwifVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwcm9ncmVzc1wiIHN0eWxlPXt7IG1hcmdpblRvcDogNiB9fT5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJhclwiIHN0eWxlPXt7IHdpZHRoOiBgJHtwcm9ncmVzcz8ucGVyY2VudGFnZSA/PyAwfSVgIH19IC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IHN0eWxlPXt7IG1hcmdpblRvcDogNiwgZm9udFNpemU6IDEyLCBvcGFjaXR5OiAwLjggfX0+e2xvZ2xpbmV9PC9kaXY+XG4gICAgICAgIHtyZXN1bHQgJiYgKFxuICAgICAgICAgIDxkaXYgc3R5bGU9e3sgbWFyZ2luVG9wOiAxMCwgZm9udFNpemU6IDE0LCBjb2xvcjogcmVzdWx0LnN1Y2Nlc3MgPyBcIiMyMmM1NWVcIiA6IFwiI2VmNDQ0NFwiIH19PlxuICAgICAgICAgICAge3Jlc3VsdC5tZXNzYWdlfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApfVxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImFjdGlvbnNcIiBzdHlsZT17eyBtYXJnaW5Ub3A6IDE2IH19PlxuICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwiYnV0dG9uIHByaW1hcnlcIiBvbkNsaWNrPXtzdGFydH0gZGlzYWJsZWQ9e2lzRmxhc2hpbmcgfHwgIXBvcnQgfHwgIWZpcm13YXJlUGF0aH0+XG4gICAgICAgICAgICDlvIDlp4vnpZ7nu4/nvZHnu5zlj4LmlbDlkIzmraVcbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cblxuXG4iXSwibmFtZXMiOlsidXNlRWZmZWN0IiwidXNlU3RhdGUiLCJ1c2VTZWFyY2hQYXJhbXMiLCJpbnZva2UiLCJsaXN0ZW4iLCJBc2NpaUNoYW9zIiwiU3luY1BhZ2UiLCJwYXJhbXMiLCJlbnYiLCJnZXQiLCJ2ZXJzaW9uIiwicG9ydCIsImZpcm13YXJlUGF0aCIsImluY2x1ZGVMaXR0bGVGUyIsInByb2dyZXNzIiwic2V0UHJvZ3Jlc3MiLCJsb2dsaW5lIiwic2V0TG9nbGluZSIsImlzRmxhc2hpbmciLCJzZXRJc0ZsYXNoaW5nIiwicmVzdWx0Iiwic2V0UmVzdWx0IiwidW5saXN0ZW5Qcm9ncmVzc1AiLCJlIiwicCIsInBheWxvYWQiLCJtZXNzYWdlIiwidW5saXN0ZW5Db21wbGV0ZVAiLCJyIiwidGhlbiIsImZuIiwic3RhcnQiLCJyZXF1ZXN0IiwiZmlybXdhcmVfcGF0aCIsImluY2x1ZGVfbGl0dGxlZnMiLCJjdXN0b21fYmF1ZCIsInN1Y2Nlc3MiLCJTdHJpbmciLCJkaXYiLCJjbGFzc05hbWUiLCJzdHlsZSIsInBvc2l0aW9uIiwiekluZGV4Iiwid2lkdGgiLCJtYXhXaWR0aCIsImRpc3BsYXkiLCJhbGlnbkl0ZW1zIiwiZ2FwIiwibWFyZ2luQm90dG9tIiwiYnV0dG9uIiwib25DbGljayIsIndpbmRvdyIsImhpc3RvcnkiLCJiYWNrIiwiaDEiLCJtYXJnaW4iLCJvcGFjaXR5IiwiZm9udFNpemUiLCJtYXJnaW5Ub3AiLCJwZXJjZW50YWdlIiwiY29sb3IiLCJkaXNhYmxlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/sync/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\nvar REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\nvar enableRenderableContext = false;\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false;\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nvar REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (typeof type === 'function') {\n    if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    {\n      if (typeof type.tag === 'number') {\n        error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n      }\n    }\n\n    switch (type.$$typeof) {\n      case REACT_PROVIDER_TYPE:\n        {\n          var provider = type;\n          return getContextName(provider._context) + '.Provider';\n        }\n\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n\n        {\n          return getContextName(context) + '.Consumer';\n        }\n\n      case REACT_CONSUMER_TYPE:\n        {\n          return null;\n        }\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar assign = Object.assign;\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || enableRenderableContext  || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    {\n      var warnAboutAccessingRef = function () {\n        if (!specialPropRefWarningShown) {\n          specialPropRefWarningShown = true;\n\n          error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n        }\n      };\n\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, _ref, self, source, owner, props) {\n  var ref;\n\n  {\n    ref = _ref;\n  }\n\n  var element;\n\n  {\n    // In prod, `ref` is a regular property. It will be removed in a\n    // future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n      // Built-in properties that belong on the element\n      type: type,\n      key: key,\n      ref: ref,\n      props: props,\n      // Record the component responsible for creating this element.\n      _owner: owner\n    };\n  }\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // debugInfo contains Server Component debug information.\n\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\nvar didWarnAboutKeySpread = {};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, isStaticChildren, source, self) {\n  {\n    if (!isValidElementType(type)) {\n      // This is an invalid element type.\n      //\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    } else {\n      // This is a valid element type.\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing\n      // errors. We don't want exception behavior to differ between dev and\n      // prod. (Rendering will throw with a helpful message and as soon as the\n      // type is fixed, the key warnings will appear.)\n      var children = config.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    } // Warn about key spread regardless of whether the type is valid.\n\n\n    if (hasOwnProperty.call(config, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(config).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      {\n        ref = config.ref;\n      }\n\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && // Skip over reserved prop names\n      propName !== 'key' && (propName !== 'ref')) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    var element = ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    }\n\n    return element;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nvar ownerHasKeyUseWarning = {};\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = getComponentNameFromType(parentType);\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  // TODO: Move this to render phase instead of at element creation.\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar jsxDEV = jsxDEV$1 ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/YTZkNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tauri-apps/api/core.js":
/*!**********************************************!*\
  !*** ./node_modules/@tauri-apps/api/core.js ***!
  \**********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Channel: function() { return /* binding */ Channel; },\n/* harmony export */   PluginListener: function() { return /* binding */ PluginListener; },\n/* harmony export */   Resource: function() { return /* binding */ Resource; },\n/* harmony export */   SERIALIZE_TO_IPC_FN: function() { return /* binding */ SERIALIZE_TO_IPC_FN; },\n/* harmony export */   addPluginListener: function() { return /* binding */ addPluginListener; },\n/* harmony export */   checkPermissions: function() { return /* binding */ checkPermissions; },\n/* harmony export */   convertFileSrc: function() { return /* binding */ convertFileSrc; },\n/* harmony export */   invoke: function() { return /* binding */ invoke; },\n/* harmony export */   isTauri: function() { return /* binding */ isTauri; },\n/* harmony export */   requestPermissions: function() { return /* binding */ requestPermissions; },\n/* harmony export */   transformCallback: function() { return /* binding */ transformCallback; }\n/* harmony export */ });\n/* harmony import */ var _external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./external/tslib/tslib.es6.js */ \"(app-pages-browser)/./node_modules/@tauri-apps/api/external/tslib/tslib.es6.js\");\n\n\n// Copyright 2019-2024 Tauri Programme within The Commons Conservancy\n// SPDX-License-Identifier: Apache-2.0\n// SPDX-License-Identifier: MIT\nvar _Channel_onmessage, _Channel_nextMessageIndex, _Channel_pendingMessages, _Channel_messageEndIndex, _Resource_rid;\n/**\n * Invoke your custom commands.\n *\n * This package is also accessible with `window.__TAURI__.core` when [`app.withGlobalTauri`](https://v2.tauri.app/reference/config/#withglobaltauri) in `tauri.conf.json` is set to `true`.\n * @module\n */\n/**\n * A key to be used to implement a special function\n * on your types that define how your type should be serialized\n * when passing across the IPC.\n * @example\n * Given a type in Rust that looks like this\n * ```rs\n * #[derive(serde::Serialize, serde::Deserialize)\n * enum UserId {\n *   String(String),\n *   Number(u32),\n * }\n * ```\n * `UserId::String(\"id\")` would be serialized into `{ String: \"id\" }`\n * and so we need to pass the same structure back to Rust\n * ```ts\n * import { SERIALIZE_TO_IPC_FN } from \"@tauri-apps/api/core\"\n *\n * class UserIdString {\n *   id\n *   constructor(id) {\n *     this.id = id\n *   }\n *\n *   [SERIALIZE_TO_IPC_FN]() {\n *     return { String: this.id }\n *   }\n * }\n *\n * class UserIdNumber {\n *   id\n *   constructor(id) {\n *     this.id = id\n *   }\n *\n *   [SERIALIZE_TO_IPC_FN]() {\n *     return { Number: this.id }\n *   }\n * }\n *\n * type UserId = UserIdString | UserIdNumber\n * ```\n *\n */\n// if this value changes, make sure to update it in:\n// 1. ipc.js\n// 2. process-ipc-message-fn.js\nconst SERIALIZE_TO_IPC_FN = '__TAURI_TO_IPC_KEY__';\n/**\n * Stores the callback in a known location, and returns an identifier that can be passed to the backend.\n * The backend uses the identifier to `eval()` the callback.\n *\n * @return An unique identifier associated with the callback function.\n *\n * @since 1.0.0\n */\nfunction transformCallback(\n// TODO: Make this not optional in v3\ncallback, once = false) {\n    return window.__TAURI_INTERNALS__.transformCallback(callback, once);\n}\nclass Channel {\n    constructor(onmessage) {\n        _Channel_onmessage.set(this, void 0);\n        // the index is used as a mechanism to preserve message order\n        _Channel_nextMessageIndex.set(this, 0);\n        _Channel_pendingMessages.set(this, []);\n        _Channel_messageEndIndex.set(this, void 0);\n        (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _Channel_onmessage, onmessage || (() => { }), \"f\");\n        this.id = transformCallback((rawMessage) => {\n            const index = rawMessage.index;\n            if ('end' in rawMessage) {\n                if (index == (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_nextMessageIndex, \"f\")) {\n                    this.cleanupCallback();\n                }\n                else {\n                    (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _Channel_messageEndIndex, index, \"f\");\n                }\n                return;\n            }\n            const message = rawMessage.message;\n            // Process the message if we're at the right order\n            if (index == (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_nextMessageIndex, \"f\")) {\n                (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_onmessage, \"f\").call(this, message);\n                (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _Channel_nextMessageIndex, (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_nextMessageIndex, \"f\") + 1, \"f\");\n                // process pending messages\n                while ((0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_nextMessageIndex, \"f\") in (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_pendingMessages, \"f\")) {\n                    const message = (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_pendingMessages, \"f\")[(0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_nextMessageIndex, \"f\")];\n                    (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_onmessage, \"f\").call(this, message);\n                    // eslint-disable-next-line @typescript-eslint/no-array-delete\n                    delete (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_pendingMessages, \"f\")[(0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_nextMessageIndex, \"f\")];\n                    (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _Channel_nextMessageIndex, (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_nextMessageIndex, \"f\") + 1, \"f\");\n                }\n                if ((0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_nextMessageIndex, \"f\") === (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_messageEndIndex, \"f\")) {\n                    this.cleanupCallback();\n                }\n            }\n            // Queue the message if we're not\n            else {\n                // eslint-disable-next-line security/detect-object-injection\n                (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_pendingMessages, \"f\")[index] = message;\n            }\n        });\n    }\n    cleanupCallback() {\n        window.__TAURI_INTERNALS__.unregisterCallback(this.id);\n    }\n    set onmessage(handler) {\n        (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _Channel_onmessage, handler, \"f\");\n    }\n    get onmessage() {\n        return (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Channel_onmessage, \"f\");\n    }\n    [(_Channel_onmessage = new WeakMap(), _Channel_nextMessageIndex = new WeakMap(), _Channel_pendingMessages = new WeakMap(), _Channel_messageEndIndex = new WeakMap(), SERIALIZE_TO_IPC_FN)]() {\n        return `__CHANNEL__:${this.id}`;\n    }\n    toJSON() {\n        // eslint-disable-next-line security/detect-object-injection\n        return this[SERIALIZE_TO_IPC_FN]();\n    }\n}\nclass PluginListener {\n    constructor(plugin, event, channelId) {\n        this.plugin = plugin;\n        this.event = event;\n        this.channelId = channelId;\n    }\n    async unregister() {\n        return invoke(`plugin:${this.plugin}|remove_listener`, {\n            event: this.event,\n            channelId: this.channelId\n        });\n    }\n}\n/**\n * Adds a listener to a plugin event.\n *\n * @returns The listener object to stop listening to the events.\n *\n * @since 2.0.0\n */\nasync function addPluginListener(plugin, event, cb) {\n    const handler = new Channel(cb);\n    return invoke(`plugin:${plugin}|registerListener`, { event, handler }).then(() => new PluginListener(plugin, event, handler.id));\n}\n/**\n * Get permission state for a plugin.\n *\n * This should be used by plugin authors to wrap their actual implementation.\n */\nasync function checkPermissions(plugin) {\n    return invoke(`plugin:${plugin}|check_permissions`);\n}\n/**\n * Request permissions.\n *\n * This should be used by plugin authors to wrap their actual implementation.\n */\nasync function requestPermissions(plugin) {\n    return invoke(`plugin:${plugin}|request_permissions`);\n}\n/**\n * Sends a message to the backend.\n * @example\n * ```typescript\n * import { invoke } from '@tauri-apps/api/core';\n * await invoke('login', { user: 'tauri', password: 'poiwe3h4r5ip3yrhtew9ty' });\n * ```\n *\n * @param cmd The command name.\n * @param args The optional arguments to pass to the command.\n * @param options The request options.\n * @return A promise resolving or rejecting to the backend response.\n *\n * @since 1.0.0\n */\nasync function invoke(cmd, args = {}, options) {\n    return window.__TAURI_INTERNALS__.invoke(cmd, args, options);\n}\n/**\n * Convert a device file path to an URL that can be loaded by the webview.\n * Note that `asset:` and `http://asset.localhost` must be added to [`app.security.csp`](https://v2.tauri.app/reference/config/#csp-1) in `tauri.conf.json`.\n * Example CSP value: `\"csp\": \"default-src 'self' ipc: http://ipc.localhost; img-src 'self' asset: http://asset.localhost\"` to use the asset protocol on image sources.\n *\n * Additionally, `\"enable\" : \"true\"` must be added to [`app.security.assetProtocol`](https://v2.tauri.app/reference/config/#assetprotocolconfig)\n * in `tauri.conf.json` and its access scope must be defined on the `scope` array on the same `assetProtocol` object.\n *\n * @param  filePath The file path.\n * @param  protocol The protocol to use. Defaults to `asset`. You only need to set this when using a custom protocol.\n * @example\n * ```typescript\n * import { appDataDir, join } from '@tauri-apps/api/path';\n * import { convertFileSrc } from '@tauri-apps/api/core';\n * const appDataDirPath = await appDataDir();\n * const filePath = await join(appDataDirPath, 'assets/video.mp4');\n * const assetUrl = convertFileSrc(filePath);\n *\n * const video = document.getElementById('my-video');\n * const source = document.createElement('source');\n * source.type = 'video/mp4';\n * source.src = assetUrl;\n * video.appendChild(source);\n * video.load();\n * ```\n *\n * @return the URL that can be used as source on the webview.\n *\n * @since 1.0.0\n */\nfunction convertFileSrc(filePath, protocol = 'asset') {\n    return window.__TAURI_INTERNALS__.convertFileSrc(filePath, protocol);\n}\n/**\n * A rust-backed resource stored through `tauri::Manager::resources_table` API.\n *\n * The resource lives in the main process and does not exist\n * in the Javascript world, and thus will not be cleaned up automatiacally\n * except on application exit. If you want to clean it up early, call {@linkcode Resource.close}\n *\n * @example\n * ```typescript\n * import { Resource, invoke } from '@tauri-apps/api/core';\n * export class DatabaseHandle extends Resource {\n *   static async open(path: string): Promise<DatabaseHandle> {\n *     const rid: number = await invoke('open_db', { path });\n *     return new DatabaseHandle(rid);\n *   }\n *\n *   async execute(sql: string): Promise<void> {\n *     await invoke('execute_sql', { rid: this.rid, sql });\n *   }\n * }\n * ```\n */\nclass Resource {\n    get rid() {\n        return (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Resource_rid, \"f\");\n    }\n    constructor(rid) {\n        _Resource_rid.set(this, void 0);\n        (0,_external_tslib_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _Resource_rid, rid, \"f\");\n    }\n    /**\n     * Destroys and cleans up this resource from memory.\n     * **You should not call any method on this object anymore and should drop any reference to it.**\n     */\n    async close() {\n        return invoke('plugin:resources|close', {\n            rid: this.rid\n        });\n    }\n}\n_Resource_rid = new WeakMap();\nfunction isTauri() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n    return !!(globalThis || window).isTauri;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdGF1cmktYXBwcy9hcGkvY29yZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBK0Y7O0FBRS9GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsY0FBYztBQUNwRTtBQUNBO0FBQ0EsWUFBWSxzQkFBc0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsb0ZBQXNCLGtEQUFrRDtBQUNoRjtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsb0ZBQXNCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixvRkFBc0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixvRkFBc0I7QUFDL0MsZ0JBQWdCLG9GQUFzQjtBQUN0QyxnQkFBZ0Isb0ZBQXNCLGtDQUFrQyxvRkFBc0I7QUFDOUY7QUFDQSx1QkFBdUIsb0ZBQXNCLDBDQUEwQyxvRkFBc0I7QUFDN0csb0NBQW9DLG9GQUFzQixzQ0FBc0Msb0ZBQXNCO0FBQ3RILG9CQUFvQixvRkFBc0I7QUFDMUM7QUFDQSwyQkFBMkIsb0ZBQXNCLHNDQUFzQyxvRkFBc0I7QUFDN0csb0JBQW9CLG9GQUFzQixrQ0FBa0Msb0ZBQXNCO0FBQ2xHO0FBQ0Esb0JBQW9CLG9GQUFzQiwyQ0FBMkMsb0ZBQXNCO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixvRkFBc0I7QUFDdEM7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsb0ZBQXNCO0FBQzlCO0FBQ0E7QUFDQSxlQUFlLG9GQUFzQjtBQUNyQztBQUNBO0FBQ0EsOEJBQThCLFFBQVE7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsWUFBWTtBQUM1QztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsT0FBTyxzQkFBc0IsZ0JBQWdCO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLE9BQU87QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsT0FBTztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxTQUFTO0FBQ3JCLDJCQUEyQixtREFBbUQ7QUFDOUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2RUFBNkU7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksbUJBQW1CO0FBQy9CLFlBQVksaUJBQWlCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVFQUF1RTtBQUN2RTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG1CQUFtQjtBQUMvQjtBQUNBO0FBQ0EscURBQXFELE1BQU07QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsb0JBQW9CO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0ZBQXNCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBLFFBQVEsb0ZBQXNCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRStLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdGF1cmktYXBwcy9hcGkvY29yZS5qcz9kY2EyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fY2xhc3NQcml2YXRlRmllbGRHZXQsIF9fY2xhc3NQcml2YXRlRmllbGRTZXQgfSBmcm9tICcuL2V4dGVybmFsL3RzbGliL3RzbGliLmVzNi5qcyc7XG5cbi8vIENvcHlyaWdodCAyMDE5LTIwMjQgVGF1cmkgUHJvZ3JhbW1lIHdpdGhpbiBUaGUgQ29tbW9ucyBDb25zZXJ2YW5jeVxuLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcbi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbnZhciBfQ2hhbm5lbF9vbm1lc3NhZ2UsIF9DaGFubmVsX25leHRNZXNzYWdlSW5kZXgsIF9DaGFubmVsX3BlbmRpbmdNZXNzYWdlcywgX0NoYW5uZWxfbWVzc2FnZUVuZEluZGV4LCBfUmVzb3VyY2VfcmlkO1xuLyoqXG4gKiBJbnZva2UgeW91ciBjdXN0b20gY29tbWFuZHMuXG4gKlxuICogVGhpcyBwYWNrYWdlIGlzIGFsc28gYWNjZXNzaWJsZSB3aXRoIGB3aW5kb3cuX19UQVVSSV9fLmNvcmVgIHdoZW4gW2BhcHAud2l0aEdsb2JhbFRhdXJpYF0oaHR0cHM6Ly92Mi50YXVyaS5hcHAvcmVmZXJlbmNlL2NvbmZpZy8jd2l0aGdsb2JhbHRhdXJpKSBpbiBgdGF1cmkuY29uZi5qc29uYCBpcyBzZXQgdG8gYHRydWVgLlxuICogQG1vZHVsZVxuICovXG4vKipcbiAqIEEga2V5IHRvIGJlIHVzZWQgdG8gaW1wbGVtZW50IGEgc3BlY2lhbCBmdW5jdGlvblxuICogb24geW91ciB0eXBlcyB0aGF0IGRlZmluZSBob3cgeW91ciB0eXBlIHNob3VsZCBiZSBzZXJpYWxpemVkXG4gKiB3aGVuIHBhc3NpbmcgYWNyb3NzIHRoZSBJUEMuXG4gKiBAZXhhbXBsZVxuICogR2l2ZW4gYSB0eXBlIGluIFJ1c3QgdGhhdCBsb29rcyBsaWtlIHRoaXNcbiAqIGBgYHJzXG4gKiAjW2Rlcml2ZShzZXJkZTo6U2VyaWFsaXplLCBzZXJkZTo6RGVzZXJpYWxpemUpXG4gKiBlbnVtIFVzZXJJZCB7XG4gKiAgIFN0cmluZyhTdHJpbmcpLFxuICogICBOdW1iZXIodTMyKSxcbiAqIH1cbiAqIGBgYFxuICogYFVzZXJJZDo6U3RyaW5nKFwiaWRcIilgIHdvdWxkIGJlIHNlcmlhbGl6ZWQgaW50byBgeyBTdHJpbmc6IFwiaWRcIiB9YFxuICogYW5kIHNvIHdlIG5lZWQgdG8gcGFzcyB0aGUgc2FtZSBzdHJ1Y3R1cmUgYmFjayB0byBSdXN0XG4gKiBgYGB0c1xuICogaW1wb3J0IHsgU0VSSUFMSVpFX1RPX0lQQ19GTiB9IGZyb20gXCJAdGF1cmktYXBwcy9hcGkvY29yZVwiXG4gKlxuICogY2xhc3MgVXNlcklkU3RyaW5nIHtcbiAqICAgaWRcbiAqICAgY29uc3RydWN0b3IoaWQpIHtcbiAqICAgICB0aGlzLmlkID0gaWRcbiAqICAgfVxuICpcbiAqICAgW1NFUklBTElaRV9UT19JUENfRk5dKCkge1xuICogICAgIHJldHVybiB7IFN0cmluZzogdGhpcy5pZCB9XG4gKiAgIH1cbiAqIH1cbiAqXG4gKiBjbGFzcyBVc2VySWROdW1iZXIge1xuICogICBpZFxuICogICBjb25zdHJ1Y3RvcihpZCkge1xuICogICAgIHRoaXMuaWQgPSBpZFxuICogICB9XG4gKlxuICogICBbU0VSSUFMSVpFX1RPX0lQQ19GTl0oKSB7XG4gKiAgICAgcmV0dXJuIHsgTnVtYmVyOiB0aGlzLmlkIH1cbiAqICAgfVxuICogfVxuICpcbiAqIHR5cGUgVXNlcklkID0gVXNlcklkU3RyaW5nIHwgVXNlcklkTnVtYmVyXG4gKiBgYGBcbiAqXG4gKi9cbi8vIGlmIHRoaXMgdmFsdWUgY2hhbmdlcywgbWFrZSBzdXJlIHRvIHVwZGF0ZSBpdCBpbjpcbi8vIDEuIGlwYy5qc1xuLy8gMi4gcHJvY2Vzcy1pcGMtbWVzc2FnZS1mbi5qc1xuY29uc3QgU0VSSUFMSVpFX1RPX0lQQ19GTiA9ICdfX1RBVVJJX1RPX0lQQ19LRVlfXyc7XG4vKipcbiAqIFN0b3JlcyB0aGUgY2FsbGJhY2sgaW4gYSBrbm93biBsb2NhdGlvbiwgYW5kIHJldHVybnMgYW4gaWRlbnRpZmllciB0aGF0IGNhbiBiZSBwYXNzZWQgdG8gdGhlIGJhY2tlbmQuXG4gKiBUaGUgYmFja2VuZCB1c2VzIHRoZSBpZGVudGlmaWVyIHRvIGBldmFsKClgIHRoZSBjYWxsYmFjay5cbiAqXG4gKiBAcmV0dXJuIEFuIHVuaXF1ZSBpZGVudGlmaWVyIGFzc29jaWF0ZWQgd2l0aCB0aGUgY2FsbGJhY2sgZnVuY3Rpb24uXG4gKlxuICogQHNpbmNlIDEuMC4wXG4gKi9cbmZ1bmN0aW9uIHRyYW5zZm9ybUNhbGxiYWNrKFxuLy8gVE9ETzogTWFrZSB0aGlzIG5vdCBvcHRpb25hbCBpbiB2M1xuY2FsbGJhY2ssIG9uY2UgPSBmYWxzZSkge1xuICAgIHJldHVybiB3aW5kb3cuX19UQVVSSV9JTlRFUk5BTFNfXy50cmFuc2Zvcm1DYWxsYmFjayhjYWxsYmFjaywgb25jZSk7XG59XG5jbGFzcyBDaGFubmVsIHtcbiAgICBjb25zdHJ1Y3Rvcihvbm1lc3NhZ2UpIHtcbiAgICAgICAgX0NoYW5uZWxfb25tZXNzYWdlLnNldCh0aGlzLCB2b2lkIDApO1xuICAgICAgICAvLyB0aGUgaW5kZXggaXMgdXNlZCBhcyBhIG1lY2hhbmlzbSB0byBwcmVzZXJ2ZSBtZXNzYWdlIG9yZGVyXG4gICAgICAgIF9DaGFubmVsX25leHRNZXNzYWdlSW5kZXguc2V0KHRoaXMsIDApO1xuICAgICAgICBfQ2hhbm5lbF9wZW5kaW5nTWVzc2FnZXMuc2V0KHRoaXMsIFtdKTtcbiAgICAgICAgX0NoYW5uZWxfbWVzc2FnZUVuZEluZGV4LnNldCh0aGlzLCB2b2lkIDApO1xuICAgICAgICBfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0KHRoaXMsIF9DaGFubmVsX29ubWVzc2FnZSwgb25tZXNzYWdlIHx8ICgoKSA9PiB7IH0pLCBcImZcIik7XG4gICAgICAgIHRoaXMuaWQgPSB0cmFuc2Zvcm1DYWxsYmFjaygocmF3TWVzc2FnZSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgaW5kZXggPSByYXdNZXNzYWdlLmluZGV4O1xuICAgICAgICAgICAgaWYgKCdlbmQnIGluIHJhd01lc3NhZ2UpIHtcbiAgICAgICAgICAgICAgICBpZiAoaW5kZXggPT0gX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2hhbm5lbF9uZXh0TWVzc2FnZUluZGV4LCBcImZcIikpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jbGVhbnVwQ2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIF9fY2xhc3NQcml2YXRlRmllbGRTZXQodGhpcywgX0NoYW5uZWxfbWVzc2FnZUVuZEluZGV4LCBpbmRleCwgXCJmXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBtZXNzYWdlID0gcmF3TWVzc2FnZS5tZXNzYWdlO1xuICAgICAgICAgICAgLy8gUHJvY2VzcyB0aGUgbWVzc2FnZSBpZiB3ZSdyZSBhdCB0aGUgcmlnaHQgb3JkZXJcbiAgICAgICAgICAgIGlmIChpbmRleCA9PSBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9DaGFubmVsX25leHRNZXNzYWdlSW5kZXgsIFwiZlwiKSkge1xuICAgICAgICAgICAgICAgIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0NoYW5uZWxfb25tZXNzYWdlLCBcImZcIikuY2FsbCh0aGlzLCBtZXNzYWdlKTtcbiAgICAgICAgICAgICAgICBfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0KHRoaXMsIF9DaGFubmVsX25leHRNZXNzYWdlSW5kZXgsIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0NoYW5uZWxfbmV4dE1lc3NhZ2VJbmRleCwgXCJmXCIpICsgMSwgXCJmXCIpO1xuICAgICAgICAgICAgICAgIC8vIHByb2Nlc3MgcGVuZGluZyBtZXNzYWdlc1xuICAgICAgICAgICAgICAgIHdoaWxlIChfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9DaGFubmVsX25leHRNZXNzYWdlSW5kZXgsIFwiZlwiKSBpbiBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9DaGFubmVsX3BlbmRpbmdNZXNzYWdlcywgXCJmXCIpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG1lc3NhZ2UgPSBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9DaGFubmVsX3BlbmRpbmdNZXNzYWdlcywgXCJmXCIpW19fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0NoYW5uZWxfbmV4dE1lc3NhZ2VJbmRleCwgXCJmXCIpXTtcbiAgICAgICAgICAgICAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2hhbm5lbF9vbm1lc3NhZ2UsIFwiZlwiKS5jYWxsKHRoaXMsIG1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWFycmF5LWRlbGV0ZVxuICAgICAgICAgICAgICAgICAgICBkZWxldGUgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2hhbm5lbF9wZW5kaW5nTWVzc2FnZXMsIFwiZlwiKVtfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9DaGFubmVsX25leHRNZXNzYWdlSW5kZXgsIFwiZlwiKV07XG4gICAgICAgICAgICAgICAgICAgIF9fY2xhc3NQcml2YXRlRmllbGRTZXQodGhpcywgX0NoYW5uZWxfbmV4dE1lc3NhZ2VJbmRleCwgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2hhbm5lbF9uZXh0TWVzc2FnZUluZGV4LCBcImZcIikgKyAxLCBcImZcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9DaGFubmVsX25leHRNZXNzYWdlSW5kZXgsIFwiZlwiKSA9PT0gX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2hhbm5lbF9tZXNzYWdlRW5kSW5kZXgsIFwiZlwiKSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNsZWFudXBDYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIFF1ZXVlIHRoZSBtZXNzYWdlIGlmIHdlJ3JlIG5vdFxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHNlY3VyaXR5L2RldGVjdC1vYmplY3QtaW5qZWN0aW9uXG4gICAgICAgICAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2hhbm5lbF9wZW5kaW5nTWVzc2FnZXMsIFwiZlwiKVtpbmRleF0gPSBtZXNzYWdlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgY2xlYW51cENhbGxiYWNrKCkge1xuICAgICAgICB3aW5kb3cuX19UQVVSSV9JTlRFUk5BTFNfXy51bnJlZ2lzdGVyQ2FsbGJhY2sodGhpcy5pZCk7XG4gICAgfVxuICAgIHNldCBvbm1lc3NhZ2UoaGFuZGxlcikge1xuICAgICAgICBfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0KHRoaXMsIF9DaGFubmVsX29ubWVzc2FnZSwgaGFuZGxlciwgXCJmXCIpO1xuICAgIH1cbiAgICBnZXQgb25tZXNzYWdlKCkge1xuICAgICAgICByZXR1cm4gX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQ2hhbm5lbF9vbm1lc3NhZ2UsIFwiZlwiKTtcbiAgICB9XG4gICAgWyhfQ2hhbm5lbF9vbm1lc3NhZ2UgPSBuZXcgV2Vha01hcCgpLCBfQ2hhbm5lbF9uZXh0TWVzc2FnZUluZGV4ID0gbmV3IFdlYWtNYXAoKSwgX0NoYW5uZWxfcGVuZGluZ01lc3NhZ2VzID0gbmV3IFdlYWtNYXAoKSwgX0NoYW5uZWxfbWVzc2FnZUVuZEluZGV4ID0gbmV3IFdlYWtNYXAoKSwgU0VSSUFMSVpFX1RPX0lQQ19GTildKCkge1xuICAgICAgICByZXR1cm4gYF9fQ0hBTk5FTF9fOiR7dGhpcy5pZH1gO1xuICAgIH1cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBzZWN1cml0eS9kZXRlY3Qtb2JqZWN0LWluamVjdGlvblxuICAgICAgICByZXR1cm4gdGhpc1tTRVJJQUxJWkVfVE9fSVBDX0ZOXSgpO1xuICAgIH1cbn1cbmNsYXNzIFBsdWdpbkxpc3RlbmVyIHtcbiAgICBjb25zdHJ1Y3RvcihwbHVnaW4sIGV2ZW50LCBjaGFubmVsSWQpIHtcbiAgICAgICAgdGhpcy5wbHVnaW4gPSBwbHVnaW47XG4gICAgICAgIHRoaXMuZXZlbnQgPSBldmVudDtcbiAgICAgICAgdGhpcy5jaGFubmVsSWQgPSBjaGFubmVsSWQ7XG4gICAgfVxuICAgIGFzeW5jIHVucmVnaXN0ZXIoKSB7XG4gICAgICAgIHJldHVybiBpbnZva2UoYHBsdWdpbjoke3RoaXMucGx1Z2lufXxyZW1vdmVfbGlzdGVuZXJgLCB7XG4gICAgICAgICAgICBldmVudDogdGhpcy5ldmVudCxcbiAgICAgICAgICAgIGNoYW5uZWxJZDogdGhpcy5jaGFubmVsSWRcbiAgICAgICAgfSk7XG4gICAgfVxufVxuLyoqXG4gKiBBZGRzIGEgbGlzdGVuZXIgdG8gYSBwbHVnaW4gZXZlbnQuXG4gKlxuICogQHJldHVybnMgVGhlIGxpc3RlbmVyIG9iamVjdCB0byBzdG9wIGxpc3RlbmluZyB0byB0aGUgZXZlbnRzLlxuICpcbiAqIEBzaW5jZSAyLjAuMFxuICovXG5hc3luYyBmdW5jdGlvbiBhZGRQbHVnaW5MaXN0ZW5lcihwbHVnaW4sIGV2ZW50LCBjYikge1xuICAgIGNvbnN0IGhhbmRsZXIgPSBuZXcgQ2hhbm5lbChjYik7XG4gICAgcmV0dXJuIGludm9rZShgcGx1Z2luOiR7cGx1Z2lufXxyZWdpc3Rlckxpc3RlbmVyYCwgeyBldmVudCwgaGFuZGxlciB9KS50aGVuKCgpID0+IG5ldyBQbHVnaW5MaXN0ZW5lcihwbHVnaW4sIGV2ZW50LCBoYW5kbGVyLmlkKSk7XG59XG4vKipcbiAqIEdldCBwZXJtaXNzaW9uIHN0YXRlIGZvciBhIHBsdWdpbi5cbiAqXG4gKiBUaGlzIHNob3VsZCBiZSB1c2VkIGJ5IHBsdWdpbiBhdXRob3JzIHRvIHdyYXAgdGhlaXIgYWN0dWFsIGltcGxlbWVudGF0aW9uLlxuICovXG5hc3luYyBmdW5jdGlvbiBjaGVja1Blcm1pc3Npb25zKHBsdWdpbikge1xuICAgIHJldHVybiBpbnZva2UoYHBsdWdpbjoke3BsdWdpbn18Y2hlY2tfcGVybWlzc2lvbnNgKTtcbn1cbi8qKlxuICogUmVxdWVzdCBwZXJtaXNzaW9ucy5cbiAqXG4gKiBUaGlzIHNob3VsZCBiZSB1c2VkIGJ5IHBsdWdpbiBhdXRob3JzIHRvIHdyYXAgdGhlaXIgYWN0dWFsIGltcGxlbWVudGF0aW9uLlxuICovXG5hc3luYyBmdW5jdGlvbiByZXF1ZXN0UGVybWlzc2lvbnMocGx1Z2luKSB7XG4gICAgcmV0dXJuIGludm9rZShgcGx1Z2luOiR7cGx1Z2lufXxyZXF1ZXN0X3Blcm1pc3Npb25zYCk7XG59XG4vKipcbiAqIFNlbmRzIGEgbWVzc2FnZSB0byB0aGUgYmFja2VuZC5cbiAqIEBleGFtcGxlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBpbnZva2UgfSBmcm9tICdAdGF1cmktYXBwcy9hcGkvY29yZSc7XG4gKiBhd2FpdCBpbnZva2UoJ2xvZ2luJywgeyB1c2VyOiAndGF1cmknLCBwYXNzd29yZDogJ3BvaXdlM2g0cjVpcDN5cmh0ZXc5dHknIH0pO1xuICogYGBgXG4gKlxuICogQHBhcmFtIGNtZCBUaGUgY29tbWFuZCBuYW1lLlxuICogQHBhcmFtIGFyZ3MgVGhlIG9wdGlvbmFsIGFyZ3VtZW50cyB0byBwYXNzIHRvIHRoZSBjb21tYW5kLlxuICogQHBhcmFtIG9wdGlvbnMgVGhlIHJlcXVlc3Qgb3B0aW9ucy5cbiAqIEByZXR1cm4gQSBwcm9taXNlIHJlc29sdmluZyBvciByZWplY3RpbmcgdG8gdGhlIGJhY2tlbmQgcmVzcG9uc2UuXG4gKlxuICogQHNpbmNlIDEuMC4wXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGludm9rZShjbWQsIGFyZ3MgPSB7fSwgb3B0aW9ucykge1xuICAgIHJldHVybiB3aW5kb3cuX19UQVVSSV9JTlRFUk5BTFNfXy5pbnZva2UoY21kLCBhcmdzLCBvcHRpb25zKTtcbn1cbi8qKlxuICogQ29udmVydCBhIGRldmljZSBmaWxlIHBhdGggdG8gYW4gVVJMIHRoYXQgY2FuIGJlIGxvYWRlZCBieSB0aGUgd2Vidmlldy5cbiAqIE5vdGUgdGhhdCBgYXNzZXQ6YCBhbmQgYGh0dHA6Ly9hc3NldC5sb2NhbGhvc3RgIG11c3QgYmUgYWRkZWQgdG8gW2BhcHAuc2VjdXJpdHkuY3NwYF0oaHR0cHM6Ly92Mi50YXVyaS5hcHAvcmVmZXJlbmNlL2NvbmZpZy8jY3NwLTEpIGluIGB0YXVyaS5jb25mLmpzb25gLlxuICogRXhhbXBsZSBDU1AgdmFsdWU6IGBcImNzcFwiOiBcImRlZmF1bHQtc3JjICdzZWxmJyBpcGM6IGh0dHA6Ly9pcGMubG9jYWxob3N0OyBpbWctc3JjICdzZWxmJyBhc3NldDogaHR0cDovL2Fzc2V0LmxvY2FsaG9zdFwiYCB0byB1c2UgdGhlIGFzc2V0IHByb3RvY29sIG9uIGltYWdlIHNvdXJjZXMuXG4gKlxuICogQWRkaXRpb25hbGx5LCBgXCJlbmFibGVcIiA6IFwidHJ1ZVwiYCBtdXN0IGJlIGFkZGVkIHRvIFtgYXBwLnNlY3VyaXR5LmFzc2V0UHJvdG9jb2xgXShodHRwczovL3YyLnRhdXJpLmFwcC9yZWZlcmVuY2UvY29uZmlnLyNhc3NldHByb3RvY29sY29uZmlnKVxuICogaW4gYHRhdXJpLmNvbmYuanNvbmAgYW5kIGl0cyBhY2Nlc3Mgc2NvcGUgbXVzdCBiZSBkZWZpbmVkIG9uIHRoZSBgc2NvcGVgIGFycmF5IG9uIHRoZSBzYW1lIGBhc3NldFByb3RvY29sYCBvYmplY3QuXG4gKlxuICogQHBhcmFtICBmaWxlUGF0aCBUaGUgZmlsZSBwYXRoLlxuICogQHBhcmFtICBwcm90b2NvbCBUaGUgcHJvdG9jb2wgdG8gdXNlLiBEZWZhdWx0cyB0byBgYXNzZXRgLiBZb3Ugb25seSBuZWVkIHRvIHNldCB0aGlzIHdoZW4gdXNpbmcgYSBjdXN0b20gcHJvdG9jb2wuXG4gKiBAZXhhbXBsZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgYXBwRGF0YURpciwgam9pbiB9IGZyb20gJ0B0YXVyaS1hcHBzL2FwaS9wYXRoJztcbiAqIGltcG9ydCB7IGNvbnZlcnRGaWxlU3JjIH0gZnJvbSAnQHRhdXJpLWFwcHMvYXBpL2NvcmUnO1xuICogY29uc3QgYXBwRGF0YURpclBhdGggPSBhd2FpdCBhcHBEYXRhRGlyKCk7XG4gKiBjb25zdCBmaWxlUGF0aCA9IGF3YWl0IGpvaW4oYXBwRGF0YURpclBhdGgsICdhc3NldHMvdmlkZW8ubXA0Jyk7XG4gKiBjb25zdCBhc3NldFVybCA9IGNvbnZlcnRGaWxlU3JjKGZpbGVQYXRoKTtcbiAqXG4gKiBjb25zdCB2aWRlbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdteS12aWRlbycpO1xuICogY29uc3Qgc291cmNlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc291cmNlJyk7XG4gKiBzb3VyY2UudHlwZSA9ICd2aWRlby9tcDQnO1xuICogc291cmNlLnNyYyA9IGFzc2V0VXJsO1xuICogdmlkZW8uYXBwZW5kQ2hpbGQoc291cmNlKTtcbiAqIHZpZGVvLmxvYWQoKTtcbiAqIGBgYFxuICpcbiAqIEByZXR1cm4gdGhlIFVSTCB0aGF0IGNhbiBiZSB1c2VkIGFzIHNvdXJjZSBvbiB0aGUgd2Vidmlldy5cbiAqXG4gKiBAc2luY2UgMS4wLjBcbiAqL1xuZnVuY3Rpb24gY29udmVydEZpbGVTcmMoZmlsZVBhdGgsIHByb3RvY29sID0gJ2Fzc2V0Jykge1xuICAgIHJldHVybiB3aW5kb3cuX19UQVVSSV9JTlRFUk5BTFNfXy5jb252ZXJ0RmlsZVNyYyhmaWxlUGF0aCwgcHJvdG9jb2wpO1xufVxuLyoqXG4gKiBBIHJ1c3QtYmFja2VkIHJlc291cmNlIHN0b3JlZCB0aHJvdWdoIGB0YXVyaTo6TWFuYWdlcjo6cmVzb3VyY2VzX3RhYmxlYCBBUEkuXG4gKlxuICogVGhlIHJlc291cmNlIGxpdmVzIGluIHRoZSBtYWluIHByb2Nlc3MgYW5kIGRvZXMgbm90IGV4aXN0XG4gKiBpbiB0aGUgSmF2YXNjcmlwdCB3b3JsZCwgYW5kIHRodXMgd2lsbCBub3QgYmUgY2xlYW5lZCB1cCBhdXRvbWF0aWFjYWxseVxuICogZXhjZXB0IG9uIGFwcGxpY2F0aW9uIGV4aXQuIElmIHlvdSB3YW50IHRvIGNsZWFuIGl0IHVwIGVhcmx5LCBjYWxsIHtAbGlua2NvZGUgUmVzb3VyY2UuY2xvc2V9XG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IFJlc291cmNlLCBpbnZva2UgfSBmcm9tICdAdGF1cmktYXBwcy9hcGkvY29yZSc7XG4gKiBleHBvcnQgY2xhc3MgRGF0YWJhc2VIYW5kbGUgZXh0ZW5kcyBSZXNvdXJjZSB7XG4gKiAgIHN0YXRpYyBhc3luYyBvcGVuKHBhdGg6IHN0cmluZyk6IFByb21pc2U8RGF0YWJhc2VIYW5kbGU+IHtcbiAqICAgICBjb25zdCByaWQ6IG51bWJlciA9IGF3YWl0IGludm9rZSgnb3Blbl9kYicsIHsgcGF0aCB9KTtcbiAqICAgICByZXR1cm4gbmV3IERhdGFiYXNlSGFuZGxlKHJpZCk7XG4gKiAgIH1cbiAqXG4gKiAgIGFzeW5jIGV4ZWN1dGUoc3FsOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcbiAqICAgICBhd2FpdCBpbnZva2UoJ2V4ZWN1dGVfc3FsJywgeyByaWQ6IHRoaXMucmlkLCBzcWwgfSk7XG4gKiAgIH1cbiAqIH1cbiAqIGBgYFxuICovXG5jbGFzcyBSZXNvdXJjZSB7XG4gICAgZ2V0IHJpZCgpIHtcbiAgICAgICAgcmV0dXJuIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX1Jlc291cmNlX3JpZCwgXCJmXCIpO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcihyaWQpIHtcbiAgICAgICAgX1Jlc291cmNlX3JpZC5zZXQodGhpcywgdm9pZCAwKTtcbiAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZFNldCh0aGlzLCBfUmVzb3VyY2VfcmlkLCByaWQsIFwiZlwiKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVzdHJveXMgYW5kIGNsZWFucyB1cCB0aGlzIHJlc291cmNlIGZyb20gbWVtb3J5LlxuICAgICAqICoqWW91IHNob3VsZCBub3QgY2FsbCBhbnkgbWV0aG9kIG9uIHRoaXMgb2JqZWN0IGFueW1vcmUgYW5kIHNob3VsZCBkcm9wIGFueSByZWZlcmVuY2UgdG8gaXQuKipcbiAgICAgKi9cbiAgICBhc3luYyBjbG9zZSgpIHtcbiAgICAgICAgcmV0dXJuIGludm9rZSgncGx1Z2luOnJlc291cmNlc3xjbG9zZScsIHtcbiAgICAgICAgICAgIHJpZDogdGhpcy5yaWRcbiAgICAgICAgfSk7XG4gICAgfVxufVxuX1Jlc291cmNlX3JpZCA9IG5ldyBXZWFrTWFwKCk7XG5mdW5jdGlvbiBpc1RhdXJpKCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55LCBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3NcbiAgICByZXR1cm4gISEoZ2xvYmFsVGhpcyB8fCB3aW5kb3cpLmlzVGF1cmk7XG59XG5cbmV4cG9ydCB7IENoYW5uZWwsIFBsdWdpbkxpc3RlbmVyLCBSZXNvdXJjZSwgU0VSSUFMSVpFX1RPX0lQQ19GTiwgYWRkUGx1Z2luTGlzdGVuZXIsIGNoZWNrUGVybWlzc2lvbnMsIGNvbnZlcnRGaWxlU3JjLCBpbnZva2UsIGlzVGF1cmksIHJlcXVlc3RQZXJtaXNzaW9ucywgdHJhbnNmb3JtQ2FsbGJhY2sgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tauri-apps/api/core.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tauri-apps/api/event.js":
/*!***********************************************!*\
  !*** ./node_modules/@tauri-apps/api/event.js ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TauriEvent: function() { return /* binding */ TauriEvent; },\n/* harmony export */   emit: function() { return /* binding */ emit; },\n/* harmony export */   emitTo: function() { return /* binding */ emitTo; },\n/* harmony export */   listen: function() { return /* binding */ listen; },\n/* harmony export */   once: function() { return /* binding */ once; }\n/* harmony export */ });\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"(app-pages-browser)/./node_modules/@tauri-apps/api/core.js\");\n\n\n// Copyright 2019-2024 Tauri Programme within The Commons Conservancy\n// SPDX-License-Identifier: Apache-2.0\n// SPDX-License-Identifier: MIT\n/**\n * The event system allows you to emit events to the backend and listen to events from it.\n *\n * This package is also accessible with `window.__TAURI__.event` when [`app.withGlobalTauri`](https://v2.tauri.app/reference/config/#withglobaltauri) in `tauri.conf.json` is set to `true`.\n * @module\n */\n/**\n * @since 1.1.0\n */\nvar TauriEvent;\n(function (TauriEvent) {\n    TauriEvent[\"WINDOW_RESIZED\"] = \"tauri://resize\";\n    TauriEvent[\"WINDOW_MOVED\"] = \"tauri://move\";\n    TauriEvent[\"WINDOW_CLOSE_REQUESTED\"] = \"tauri://close-requested\";\n    TauriEvent[\"WINDOW_DESTROYED\"] = \"tauri://destroyed\";\n    TauriEvent[\"WINDOW_FOCUS\"] = \"tauri://focus\";\n    TauriEvent[\"WINDOW_BLUR\"] = \"tauri://blur\";\n    TauriEvent[\"WINDOW_SCALE_FACTOR_CHANGED\"] = \"tauri://scale-change\";\n    TauriEvent[\"WINDOW_THEME_CHANGED\"] = \"tauri://theme-changed\";\n    TauriEvent[\"WINDOW_CREATED\"] = \"tauri://window-created\";\n    TauriEvent[\"WEBVIEW_CREATED\"] = \"tauri://webview-created\";\n    TauriEvent[\"DRAG_ENTER\"] = \"tauri://drag-enter\";\n    TauriEvent[\"DRAG_OVER\"] = \"tauri://drag-over\";\n    TauriEvent[\"DRAG_DROP\"] = \"tauri://drag-drop\";\n    TauriEvent[\"DRAG_LEAVE\"] = \"tauri://drag-leave\";\n})(TauriEvent || (TauriEvent = {}));\n/**\n * Unregister the event listener associated with the given name and id.\n *\n * @ignore\n * @param event The event name\n * @param eventId Event identifier\n * @returns\n */\nasync function _unlisten(event, eventId) {\n    window.__TAURI_EVENT_PLUGIN_INTERNALS__.unregisterListener(event, eventId);\n    await (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.invoke)('plugin:event|unlisten', {\n        event,\n        eventId\n    });\n}\n/**\n * Listen to an emitted event to any {@link EventTarget|target}.\n *\n * @example\n * ```typescript\n * import { listen } from '@tauri-apps/api/event';\n * const unlisten = await listen<string>('error', (event) => {\n *   console.log(`Got error, payload: ${event.payload}`);\n * });\n *\n * // you need to call unlisten if your handler goes out of scope e.g. the component is unmounted\n * unlisten();\n * ```\n *\n * @param event Event name. Must include only alphanumeric characters, `-`, `/`, `:` and `_`.\n * @param handler Event handler callback.\n * @param options Event listening options.\n * @returns A promise resolving to a function to unlisten to the event.\n * Note that removing the listener is required if your listener goes out of scope e.g. the component is unmounted.\n *\n * @since 1.0.0\n */\nasync function listen(event, handler, options) {\n    var _a;\n    const target = typeof (options === null || options === void 0 ? void 0 : options.target) === 'string'\n        ? { kind: 'AnyLabel', label: options.target }\n        : ((_a = options === null || options === void 0 ? void 0 : options.target) !== null && _a !== void 0 ? _a : { kind: 'Any' });\n    return (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.invoke)('plugin:event|listen', {\n        event,\n        target,\n        handler: (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.transformCallback)(handler)\n    }).then((eventId) => {\n        return async () => _unlisten(event, eventId);\n    });\n}\n/**\n * Listens once to an emitted event to any {@link EventTarget|target}.\n *\n * @example\n * ```typescript\n * import { once } from '@tauri-apps/api/event';\n * interface LoadedPayload {\n *   loggedIn: boolean,\n *   token: string\n * }\n * const unlisten = await once<LoadedPayload>('loaded', (event) => {\n *   console.log(`App is loaded, loggedIn: ${event.payload.loggedIn}, token: ${event.payload.token}`);\n * });\n *\n * // you need to call unlisten if your handler goes out of scope e.g. the component is unmounted\n * unlisten();\n * ```\n *\n * @param event Event name. Must include only alphanumeric characters, `-`, `/`, `:` and `_`.\n * @param handler Event handler callback.\n * @param options Event listening options.\n * @returns A promise resolving to a function to unlisten to the event.\n * Note that removing the listener is required if your listener goes out of scope e.g. the component is unmounted.\n *\n * @since 1.0.0\n */\nasync function once(event, handler, options) {\n    return listen(event, (eventData) => {\n        void _unlisten(event, eventData.id);\n        handler(eventData);\n    }, options);\n}\n/**\n * Emits an event to all {@link EventTarget|targets}.\n *\n * @example\n * ```typescript\n * import { emit } from '@tauri-apps/api/event';\n * await emit('frontend-loaded', { loggedIn: true, token: 'authToken' });\n * ```\n *\n * @param event Event name. Must include only alphanumeric characters, `-`, `/`, `:` and `_`.\n * @param payload Event payload.\n *\n * @since 1.0.0\n */\nasync function emit(event, payload) {\n    await (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.invoke)('plugin:event|emit', {\n        event,\n        payload\n    });\n}\n/**\n * Emits an event to all {@link EventTarget|targets} matching the given target.\n *\n * @example\n * ```typescript\n * import { emitTo } from '@tauri-apps/api/event';\n * await emitTo('main', 'frontend-loaded', { loggedIn: true, token: 'authToken' });\n * ```\n *\n * @param target Label of the target Window/Webview/WebviewWindow or raw {@link EventTarget} object.\n * @param event Event name. Must include only alphanumeric characters, `-`, `/`, `:` and `_`.\n * @param payload Event payload.\n *\n * @since 2.0.0\n */\nasync function emitTo(target, event, payload) {\n    const eventTarget = typeof target === 'string' ? { kind: 'AnyLabel', label: target } : target;\n    await (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.invoke)('plugin:event|emit_to', {\n        target: eventTarget,\n        event,\n        payload\n    });\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tauri-apps/api/event.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tauri-apps/api/external/tslib/tslib.es6.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tauri-apps/api/external/tslib/tslib.es6.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __classPrivateFieldGet: function() { return /* binding */ __classPrivateFieldGet; },\n/* harmony export */   __classPrivateFieldSet: function() { return /* binding */ __classPrivateFieldSet; }\n/* harmony export */ });\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdGF1cmktYXBwcy9hcGkvZXh0ZXJuYWwvdHNsaWIvdHNsaWIuZXM2LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTBEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdGF1cmktYXBwcy9hcGkvZXh0ZXJuYWwvdHNsaWIvdHNsaWIuZXM2LmpzP2MzM2QiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5Db3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cclxuXHJcblBlcm1pc3Npb24gdG8gdXNlLCBjb3B5LCBtb2RpZnksIGFuZC9vciBkaXN0cmlidXRlIHRoaXMgc29mdHdhcmUgZm9yIGFueVxyXG5wdXJwb3NlIHdpdGggb3Igd2l0aG91dCBmZWUgaXMgaGVyZWJ5IGdyYW50ZWQuXHJcblxyXG5USEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiIEFORCBUSEUgQVVUSE9SIERJU0NMQUlNUyBBTEwgV0FSUkFOVElFUyBXSVRIXHJcblJFR0FSRCBUTyBUSElTIFNPRlRXQVJFIElOQ0xVRElORyBBTEwgSU1QTElFRCBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWVxyXG5BTkQgRklUTkVTUy4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUiBCRSBMSUFCTEUgRk9SIEFOWSBTUEVDSUFMLCBESVJFQ1QsXHJcbklORElSRUNULCBPUiBDT05TRVFVRU5USUFMIERBTUFHRVMgT1IgQU5ZIERBTUFHRVMgV0hBVFNPRVZFUiBSRVNVTFRJTkcgRlJPTVxyXG5MT1NTIE9GIFVTRSwgREFUQSBPUiBQUk9GSVRTLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgTkVHTElHRU5DRSBPUlxyXG5PVEhFUiBUT1JUSU9VUyBBQ1RJT04sIEFSSVNJTkcgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgVVNFIE9SXHJcblBFUkZPUk1BTkNFIE9GIFRISVMgU09GVFdBUkUuXHJcbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqICovXHJcbi8qIGdsb2JhbCBSZWZsZWN0LCBQcm9taXNlLCBTdXBwcmVzc2VkRXJyb3IsIFN5bWJvbCwgSXRlcmF0b3IgKi9cclxuXHJcblxyXG5mdW5jdGlvbiBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHJlY2VpdmVyLCBzdGF0ZSwga2luZCwgZikge1xyXG4gICAgaWYgKGtpbmQgPT09IFwiYVwiICYmICFmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJpdmF0ZSBhY2Nlc3NvciB3YXMgZGVmaW5lZCB3aXRob3V0IGEgZ2V0dGVyXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBzdGF0ZSA9PT0gXCJmdW5jdGlvblwiID8gcmVjZWl2ZXIgIT09IHN0YXRlIHx8ICFmIDogIXN0YXRlLmhhcyhyZWNlaXZlcikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgcmVhZCBwcml2YXRlIG1lbWJlciBmcm9tIGFuIG9iamVjdCB3aG9zZSBjbGFzcyBkaWQgbm90IGRlY2xhcmUgaXRcIik7XHJcbiAgICByZXR1cm4ga2luZCA9PT0gXCJtXCIgPyBmIDoga2luZCA9PT0gXCJhXCIgPyBmLmNhbGwocmVjZWl2ZXIpIDogZiA/IGYudmFsdWUgOiBzdGF0ZS5nZXQocmVjZWl2ZXIpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0KHJlY2VpdmVyLCBzdGF0ZSwgdmFsdWUsIGtpbmQsIGYpIHtcclxuICAgIGlmIChraW5kID09PSBcIm1cIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlByaXZhdGUgbWV0aG9kIGlzIG5vdCB3cml0YWJsZVwiKTtcclxuICAgIGlmIChraW5kID09PSBcImFcIiAmJiAhZikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlByaXZhdGUgYWNjZXNzb3Igd2FzIGRlZmluZWQgd2l0aG91dCBhIHNldHRlclwiKTtcclxuICAgIGlmICh0eXBlb2Ygc3RhdGUgPT09IFwiZnVuY3Rpb25cIiA/IHJlY2VpdmVyICE9PSBzdGF0ZSB8fCAhZiA6ICFzdGF0ZS5oYXMocmVjZWl2ZXIpKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IHdyaXRlIHByaXZhdGUgbWVtYmVyIHRvIGFuIG9iamVjdCB3aG9zZSBjbGFzcyBkaWQgbm90IGRlY2xhcmUgaXRcIik7XHJcbiAgICByZXR1cm4gKGtpbmQgPT09IFwiYVwiID8gZi5jYWxsKHJlY2VpdmVyLCB2YWx1ZSkgOiBmID8gZi52YWx1ZSA9IHZhbHVlIDogc3RhdGUuc2V0KHJlY2VpdmVyLCB2YWx1ZSkpLCB2YWx1ZTtcclxufVxyXG5cclxudHlwZW9mIFN1cHByZXNzZWRFcnJvciA9PT0gXCJmdW5jdGlvblwiID8gU3VwcHJlc3NlZEVycm9yIDogZnVuY3Rpb24gKGVycm9yLCBzdXBwcmVzc2VkLCBtZXNzYWdlKSB7XHJcbiAgICB2YXIgZSA9IG5ldyBFcnJvcihtZXNzYWdlKTtcclxuICAgIHJldHVybiBlLm5hbWUgPSBcIlN1cHByZXNzZWRFcnJvclwiLCBlLmVycm9yID0gZXJyb3IsIGUuc3VwcHJlc3NlZCA9IHN1cHByZXNzZWQsIGU7XHJcbn07XG5cbmV4cG9ydCB7IF9fY2xhc3NQcml2YXRlRmllbGRHZXQsIF9fY2xhc3NQcml2YXRlRmllbGRTZXQgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tauri-apps/api/external/tslib/tslib.es6.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fayl0n%2FDeepflow%2FProjects%2FBangbo0%2Fmarcel-maze%2Fmarcel-maze%2Fapp%2Fsync%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);